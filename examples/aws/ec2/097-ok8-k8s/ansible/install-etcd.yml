- hosts: etcd
  gather_facts: yes
  become: yes
  vars_files:
    - vars.yml
  tasks:
    - name: Set the hostnames
      hostname:
        use: systemd
        name: "{{ inventory_hostname }}"
    - name: Sync the etcd rpm
      copy:
        src: "{{ etcdPath }}/{{ etcdRPM }}"
        dest: /tmp/
        owner: root
        group: root
        mode: 0644

    - name: Install etcd
      yum:
        name: "/tmp/{{ etcdRPM }}"
        state: present
      notify:
        - restart-etcd

    - name: Sync the etcd.conf template
      template:
        src: templates/etcd.j2
        dest: "{{ etcdConfDir }}/etcd.conf"
        owner: etcd
        group: root
        mode: 0644
      notify:
        - restart-etcd

    - name: Ensure that the Python cryptography backend is installed
      yum:
        name: python3-cryptography
        state: present
      delegate_to: localhost
      
    - name: Ensure that etcd is started
      systemd:
        name: etcd
        state: started
        enabled: True

    - name: Ensure that the Python cryptography backend is installed
      yum:
        name: python3-cryptography
        state: present
      delegate_to: localhost

    - name: Create the root CA key
      openssl_privatekey:
        path: files/ca.key
        type: RSA
        size: 4096
      when: "{{ enableTLS }}" is true
      notify:
        - update-ca-trust
        - restart-etcd
      delegate_to: localhost

    - name: Create the CA cert
      openssl_csr:
        path: files/ca.csr
        privatekey_path: files/ca.key
        provider: selfsigned
        email_address: "{{ emailAddress }}"
        country_name: "{{ countryName }}"
        organization_name: "{{ organizationName }}"
        common_name: "{{ commonName }}"
      when: "{{ enableTLS }}" is true
      notify:
        - update-ca-trust
        - restart-etcd
      delegate_to: localhost

    - name: Create the CA cert
      openssl_certificate:
        path: files/ca.crt
        privatekey_path: files/ca.key
        csr_path: files/ca.csr
        provider: selfsigned
      when: "{{ enableTLS }}" is true
      notify:
        - update-ca-trust
        - restart-etcd
      delegate_to: localhost

  #   - name: Create the *.okd.dev wildcard key
  #     when: enableTLS is true
  #     notify:
  #       - update-ca-trust
  #       - restart-etcd
  #     delegate_to: localhost

  #   - name: Create the *.okd.dev wildcard csr
  #     when: enableTLS is true
  #     notify:
  #       - update-ca-trust
  #       - restart-etcd
  #     delegate_to: localhost

  #   - name: Create the *.okd.dev wildcard crt
  #     when: enableTLS is true
  #     notify:
  #       - update-ca-trust
  #       - restart-etcd
  #     delegate_to: localhost

  #   - name: Create CA directory
  #     file:
  #       state: directory
  #       path: /usr/share/ca-certificates/okd-ca
  #       owner: root
  #       group: root
  #       mode: 0700
  #     when: enableTLS is true
  #     notify:
  #       - update-ca-trust
  #       - restart-etcd

  #   - name: Distribute the root ca cert
  #     when: enableTLS is true
  #     notify:
  #       - update-ca-trust
  #       - restart-etcd

  #   - name: Distribute the *.okd.dev crt
  #     when: enableTLS is true
  #     notify:
  #       - update-ca-trust
  #       - restart-etcd

  #   - name: Distribute the *.okd.dev key
  #     when: enableTLS is true
  #     notify:
  #       - update-ca-trust
  #       - restart-etcd
  # #   - name: Untar etcd

  # #   - name: Create etcd service file

  # #   - name: Copy etcd certificate

  # #   - name: Copy etcd key

  # #   - name: Copy etcd ca-cert.crt

  # #   - name: Ensure etcd is running

  handlers:
    - name: Restart etcd
      systemd:
        name: etcd
        state: restarted
        enabled: True
      listen:
        - restart-etcd

  #   - name: Update CA trust
  #     command: update-ca-certificates
